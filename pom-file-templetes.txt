<!-- chunker  -->
<configuration>
	<descriptorRefs>
		<descriptorRef>jar-with-dependencies</descriptorRef>
	</descriptorRefs>
	<archive>
		<manifest>
			<mainClass>opennlp.source.chuncker.builder.ChunkerBuilder</mainClass>
		</manifest>
	</archive>
	<finalName>en-chunker-builder</finalName>
	<outputDirectory>/opt/model/builder/chunker</outputDirectory>
</configuration>

<!-- chunker trainer  -->
<configuration>
	<descriptorRefs>
		<descriptorRef>jar-with-dependencies</descriptorRef>
	</descriptorRefs>
	<archive>
		<manifest>
			<mainClass>opennlp.source.chuncker.trainer.TrainingDataCreatorMain</mainClass>
		</manifest>
	</archive>
	<finalName>en-chunker-trainer</finalName>
	<outputDirectory>/opt/model/trainer/chunker</outputDirectory>
</configuration>

<!-- chunker trainer  threaded-->
<configuration>
	<descriptorRefs>
		<descriptorRef>jar-with-dependencies</descriptorRef>
	</descriptorRefs>
	<archive>
		<manifest>
			<mainClass>opennlp.source.chuncker.trainer.ChunkerThreadedTraining</mainClass>
		</manifest>
	</archive>
	<finalName>en-chunker-thread-trainer</finalName>
	<outputDirectory>/opt/model/trainer/chunker</outputDirectory>
</configuration>

<!-- ner trainer  -->
<configuration>
	<descriptorRefs>
		<descriptorRef>jar-with-dependencies</descriptorRef>
	</descriptorRefs>
	<archive>
		<manifest>
			<mainClass>opennlp.source.namefinder.trainer.CreateTrainingDataMain</mainClass>
		</manifest>
	</archive>
	<finalName>en-ner-trainer</finalName>
	<outputDirectory>/opt/model/trainer/ner</outputDirectory>
</configuration>

<!-- ner trainer  threaded-->
<configuration>
	<descriptorRefs>
		<descriptorRef>jar-with-dependencies</descriptorRef>
	</descriptorRefs>
	<archive>
		<manifest>
			<mainClass>opennlp.source.namefinder.trainer.NerThreadedTraining</mainClass>
		</manifest>
	</archive>
	<finalName>en-ner-thread-trainer/ner</finalName>
	<outputDirectory>/opt/model/trainer</outputDirectory>
</configuration>

<!-- ner builder  -->
<configuration>
	<descriptorRefs>
		<descriptorRef>jar-with-dependencies</descriptorRef>
	</descriptorRefs>
	<archive>
		<manifest>
			<mainClass>opennlp.source.namefinder.builder.NameModelBuilder</mainClass>
		</manifest>
	</archive>
	<finalName>en-ner-builder</finalName>
	<outputDirectory>/opt/model/builder/ner</outputDirectory>
</configuration>

<!-- token trainer  -->
<configuration>
	<descriptorRefs>
		<descriptorRef>jar-with-dependencies</descriptorRef>
	</descriptorRefs>
	<archive>
		<manifest>
			<mainClass>opennlp.source.tokenizer.trainer.TokenizerMain</mainClass>
		</manifest>
	</archive>
	<finalName>en-token-trainer</finalName>
	<outputDirectory>/opt/model/trainer/token</outputDirectory>
</configuration>

<!-- token builder  -->
<configuration>
	<descriptorRefs>
		<descriptorRef>jar-with-dependencies</descriptorRef>
	</descriptorRefs>
	<archive>
		<manifest>
			<mainClass>opennlp.source.tokenizer.builder.TokenBuilder</mainClass>
		</manifest>
	</archive>
	<finalName>en-token-builder</finalName>
	<outputDirectory>/opt/model/builder/token</outputDirectory>
</configuration>

<!-- pos trainer  -->
<configuration>
	<descriptorRefs>
		<descriptorRef>jar-with-dependencies</descriptorRef>
	</descriptorRefs>
	<archive>
		<manifest>
			<mainClass>opennlp.source.pos.trainer.PosTrainerMain</mainClass>
		</manifest>
	</archive>
	<finalName>en-pos-trainer</finalName>
	<outputDirectory>/opt/model/trainer/pos</outputDirectory>
</configuration>

<!-- pos builder  -->
<configuration>
	<descriptorRefs>
		<descriptorRef>jar-with-dependencies</descriptorRef>
	</descriptorRefs>
	<archive>
		<manifest>
			<mainClass>opennlp.source.pos.builder.PosBuilder</mainClass>
		</manifest>
	</archive>
	<finalName>en-pos-builder</finalName>
	<outputDirectory>/opt/model/builder/pos</outputDirectory>
</configuration>